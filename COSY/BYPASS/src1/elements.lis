 --- BIN FILE READ: utilities
  10162 INCLUDE 'utilities';
  10163   PROCEDURE ROTATE PHI;
  10164     VARIABLE M NM1 4;
  10165     VARIABLE ANG NM2;
  10166     VARIABLE I 1;
  10167     ANG := PHI*DEGRAD;
  10168     M(1):= COS(ANG)*MAP(1) + SIN(ANG)*MAP(3);
  10169     M(3):=-SIN(ANG)*MAP(1) + COS(ANG)*MAP(3);
  10170     M(2):= COS(ANG)*MAP(2) + SIN(ANG)*MAP(4);
  10171     M(4):=-SIN(ANG)*MAP(2) + COS(ANG)*MAP(4);
  10172     LOOP I 1 4;
  10173       MAP(I):=M(I);
  10174       ENDLOOP;
  10175     ENDPROCEDURE;
  10176   FUNCTION BMULT KNL L;
  10177     BMULT := KNL/L * CONS(CHIM);
  10178     ENDFUNCTION;
  10179   PROCEDURE THINMQ L     TILT       K1       ;
  10180     VARIABLE OM NM1;
  10181     WRITE 6 '***** THIN QUADRUPOLE DEFINITION';
  10182     OM := SQRT(ABS(K1));
  10183     UMS; %UMS: 1414
  10184     IF CONS(K1)>0;
  10185       MSC(2) := -OM*SIN(OM*L)*DD(1) + 1*DD(2);
  10186       MSC(4) := OM*SINH(OM*L)*DD(3) + 1*DD(4);
  10187       ELSEIF CONS(K1)<0;
  10188       MSC(2) := OM*SINH(OM*L)*DD(1) + 1*DD(2);
  10189       MSC(4) := -OM*SIN(OM*L)*DD(3) + 1*DD(4);
  10190       ELSEIF TRUE;
  10191       DL L; %DL: 6515
  10192       ENDIF;
  10193     LOCSET 0 0 0 0 0 0; %LOCSET: 1059
  10194     UPDATE 1 1; %UPDATE: 1206
  10195     ENDPROCEDURE;
  10196   PROCEDURE QUAD1 L     TILT G;
  10197     VARIABLE L0 1;
  10198     VARIABLE G0 1;
  10199     VARIABLE TILT0 1;
  10200     WRITE 6 'BNL TYPE QUAD IN NICA FS';
  10201     L0:=L;
  10202     IF (G=0);
  10203       WRITE 6 'G=0';
  10204       DL L0; %DL: 6515
  10205       ELSEIF (1=1);
  10206       G0:=G*10;
  10207       TILT0:=TILT;
  10208       ROTATE TILT0; %ROTATE:10163
  10209       WRITE 6 'B = '&ST(G0*.05);
  10210       MQ L0 G0*0.05 0.05; %MQ: 7032
  10211       ROTATE -TILT0; %ROTATE:10163
  10212       ENDIF;
  10213     ENDPROCEDURE;
  10214   PROCEDURE QUAD L     TILT       K1        ;
  10215     VARIABLE BPT NM1;
  10216     VARIABLE A 1;
  10217     VARIABLE TILT0 1;
  10218     TILT0 := RAD2DEG(TILT); %RAD2DEG: 9746
  10219     A:=.05;
  10220     BPT := K1*CONS(CHIM)*A;
  10221     WRITE 6 'LENGTH'&SF(L, '(E15.7)'); %SF:  230
  10222     IF BPT=0;
  10223       DL L; %DL: 6515
  10224       ELSEIF TRUE;
  10225       ROTATE  TILT0; %ROTATE:10163
  10226       MQ L BPT A; %MQ: 7032
  10227       ROTATE -TILT0; %ROTATE:10163
  10228       ENDIF;
  10229     ENDPROCEDURE;
  10230   PROCEDURE SEXT L     TILT       KNL       ;
  10231     VARIABLE BPT 1;
  10232     VARIABLE TILT0 1;
  10233     VARIABLE L0 1;
  10234     BPT := 0;
  10235     WRITE 6 'Bpt = '&SF(BPT, '(E15.7)'); %SF:  230
  10236     TILT0 := RAD2DEG(TILT); %RAD2DEG: 9746
  10237     IF BPT=0;
  10238       DL L; %DL: 6515
  10239       ELSEIF TRUE;
  10240       ROTATE TILT0; %ROTATE:10163
  10241       MH L BPT .05; %MH: 7109
  10242       ROTATE -TILT0; %ROTATE:10163
  10243       ENDIF;
  10244     ENDPROCEDURE;
  10245   PROCEDURE OCT L     TILT       KNL       ;
  10246     VARIABLE BPT 1;
  10247     VARIABLE TILT0 1;
  10248     BPT := 0;
  10249     WRITE 6 'Bpt = '&SF(BPT, '(E15.7)'); %SF:  230
  10250     IF BPT=0;
  10251       DL L; %DL: 6515
  10252       ELSEIF TRUE;
  10253       ROTATE TILT0; %ROTATE:10163
  10254       MO L BPT .05; %MO: 7154
  10255       ROTATE -TILT0; %ROTATE:10163
  10256       ENDIF;
  10257     ENDPROCEDURE;
  10258   PROCEDURE MULT TILT       KNL        N;
  10259     VARIABLE BPT 1 N;
  10260     VARIABLE I 1;
  10261     VARIABLE L0 1;
  10262     VARIABLE FLAG 1;
  10263     VARIABLE TILT0 1;
  10264     L0 := 0;
  10265     TILT0 := RAD2DEG(TILT); %RAD2DEG: 9746
  10266     IF N=2;
  10267       WRITE 6 'QUAD';
  10268       DL L0; %DL: 6515
  10269       ELSEIF N=3;
  10270       WRITE 6 'SEXT';
  10271       DL L0; %DL: 6515
  10272       ELSEIF N=4;
  10273       WRITE 6 'OCT';
  10274       DL L0; %DL: 6515
  10275       ELSEIF TRUE;
  10276       WRITE 6 '*** UNDEFINED ELEMENT ERROR ***';
  10277       ENDIF;
  10278     ENDPROCEDURE;
  10279   PROCEDURE SBEND L     ANGLE       TILT       E1       H1       E2   
                      H2      FINT        FINTX       ;
  10280     VARIABLE R 1;
  10281     VARIABLE ANGLE0 1;
  10282     VARIABLE TILT0 1;
  10283     VARIABLE E10 1;
  10284     VARIABLE E20 1;
  10285     E10 := E1/DEGRAD;
  10286     E20 := E2/DEGRAD;
  10287     ANGLE0 := ABS(ANGLE)/DEGRAD;
  10288     TILT0 := TILT/DEGRAD;
  10289     R := L/ABS(ANGLE);
  10290     IF ANGLE<0;
  10291       CB; %CB: 6982
  10292       ENDIF;
  10293     ROTATE TILT0; %ROTATE:10163
  10294     DI R ANGLE0 .1 E10 H1 E20 H2; %DI: 7752
  10295     ROTATE -TILT0; %ROTATE:10163
  10296     IF ANGLE<0;
  10297       CB; %CB: 6982
  10298       ENDIF;
  10299     ENDPROCEDURE;
  10300   PROCEDURE RBEND L     ANGLE       TILT      ;
  10301     VARIABLE R 1;
  10302     VARIABLE ANGLE_DEG 1;
  10303     VARIABLE TILT0 1;
  10304     VARIABLE NT 1;
  10305     VARIABLE KN 1 1;
  10306     VARIABLE S1 1 1;
  10307     VARIABLE S2 1 1;
  10308     VARIABLE B 1;
  10309     NT := 1;
  10310     B := CONS(P0)/(CLIGHT*1E-6) * ANGLE/L;
  10311     KN(1) := 0;
  10312     S1(1) := 0;
  10313     S2(1) := 0;
  10314     ANGLE_DEG := ABS(ANGLE)/DEGRAD;
  10315     TILT0 := TILT/DEGRAD;
  10316     R := L/ABS(ANGLE);
  10317     IF ANGLE<0;
  10318       CB; %CB: 6982
  10319       WRITE 6 'CB';
  10320       ENDIF;
  10321     ROTATE TILT0; %ROTATE:10163
  10322     DP R ANGLE_DEG .05; %DP: 7756
  10323     ROTATE -TILT0; %ROTATE:10163
  10324     IF ANGLE<0;
  10325       CB; %CB: 6982
  10326       ENDIF;
  10327     ENDPROCEDURE;
  10328   PROCEDURE SOL L     KS       ;
  10329     VARIABLE C 1;
  10330     VARIABLE S 1;
  10331     VARIABLE GAMMA NM1;
  10332     WRITE 6 '!!! ******** CUSTOM SOLENOID DEF';
  10333     C := COS(KS*L);
  10334     S := SIN(KS*L);
  10335     GAMMA := 1 + E0/(M0*AMUMEV) ;
  10336     UMS; %UMS: 1414
  10337     IF KS#0;
  10338       MSC(1) := 1*DD(1) + S/KS*DD(2)      + (1-C)/KS*DD(4);
  10339       MSC(2) :=           C*DD(2)         + S*DD(4);
  10340       MSC(3) :=         - (1-C)/KS*DD(2)  + S/KS*DD(4);
  10341       MSC(4) :=         - S*DD(2)         + C*DD(4);
  10342       MSC(5) := L/GAMMA/GAMMA;
  10343       ELSEIF TRUE;
  10344       DL L; %DL: 6515
  10345       ENDIF;
  10346     LOCSET 0 0 0 0 0 0 ; %LOCSET: 1059
  10347     UPDATE 1 1; %UPDATE: 1206
  10348     ENDPROCEDURE;
  10349   PROCEDURE SOLENOID_0 L     KS        ;
  10350     VARIABLE B0 1;
  10351     VARIABLE A 1;
  10352     VARIABLE MU 1 ;
  10353     VARIABLE N 1;
  10354     VARIABLE I 1;
  10355     MU := 1.2566E-6;
  10356     N := 100;
  10357     A  := .05;
  10358     B0 := KS * CONS(CHIM);
  10359     I  := 2*B0/MU/N;
  10360     IF (B0 = 0);
  10361       DL L; %DL: 6515
  10362       WRITE 6 'SOLENOID IS OFF';
  10363       ELSEIF TRUE;
  10364       CMS B0 A L; %CMS: 7999
  10365       ENDIF;
  10366     ENDPROCEDURE;
  10367   PROCEDURE SOLENOID L     KS        ;
  10368     VARIABLE B0 1;
  10369     VARIABLE A 1;
  10370     VARIABLE BTOP 1;
  10371     BTOP := 6;
  10372     A  := .05;
  10373     B0 := KS * CONS(CHIM);
  10374     WRITE 6 'SOLENOID MAGNETIC FIELD COMPUTED:'&SF(B0, '(F15.7)')&' Tl
                  '; %SF:  230
  10375     IF (B0>BTOP);
  10376       B0 := BTOP;
  10377       WRITE 6 'SOLENOID REACHED SATURATION; SETTING Btop FIELD (6T)!';

  10378       ENDIF;
  10379     IF (B0 = 0);
  10380       DL L; %DL: 6515
  10381       WRITE 6 'SOLENOID IS OFF';
  10382       ELSEIF TRUE;
  10383       CMS B0 A L; %CMS: 7999
  10384       ENDIF;
  10385     ENDPROCEDURE;
  10386   PROCEDURE RFCAV L     VOLT      LAG       HARMON       ;
  10387     IF VOLT=0;
  10388       DL L; %DL: 6515
  10389       ELSEIF TRUE;
  10390       WRITE 6 'UNIMPLEMENTED ERROR!';
  10391       ENDIF;
  10392     ENDPROCEDURE;
  10393   PROCEDURE KICK L     KX        KY       ;
  10394     IF ((KX=0) * (KY=0));
  10395       DL L; %DL: 6515
  10396       ELSEIF TRUE;
  10397       WRITE 6 'UNIMPLEMENTED ERROR!';
  10398       ENDIF;
  10399     ENDPROCEDURE;
  10400   PROCEDURE WIEN L2     B1       B2         TILT      ;
  10401     VARIABLE R1 1;
  10402     VARIABLE R2 1;
  10403     VARIABLE B0 1;
  10404     VARIABLE B3 1;
  10405     VARIABLE L1 1;
  10406     VARIABLE TILT0 1;
  10407     VARIABLE TOF 1;
  10408     VARIABLE BX 1;
  10409     VARIABLE EY 1;
  10410     VARIABLE BETA 1;
  10411     VARIABLE DWMDM 1;
  10412     L1:=L2;
  10413     B0:=ABS(B1)/10;
  10414     B3:=ABS(B2)*1E5;
  10415     R2:=CONS(CHIM)/B0;
  10416     R1:=CONS(CHIE)/B3;
  10417     TILT0 := TILT;
  10418     WF R1 R1 L1 0.05; %WF: 8526
  10419     IF TILT0#0;
  10420       BX := B0*TAN(TILT0);
  10421       EY := CONS(CHIE)/CONS(CHIM)*BX;
  10422       BETA := CONS(V0)/CLIGHT;
  10423       DWMDM := Z0/M0*EZERO/AMU*(G0*BX - (G0 - 1/BETA/BETA + 1)*BETA*EY
                  /CLIGHT);
  10424       TOF := L1/CONS(V0);
  10425       ENDIF;
  10426     ENDPROCEDURE;
  10427   PROCEDURE WIEN L2 B1 B2 TILT;
  10428     VARIABLE R1 1;
  10429     VARIABLE R2 1;
  10430     VARIABLE B0 1;
  10431     VARIABLE B3 1;
  10432     VARIABLE L1 1;
  10433     VARIABLE TILT0 1;
  10434     VARIABLE TOF 1;
  10435     VARIABLE BX 1;
  10436     VARIABLE EY 1;
  10437     VARIABLE BETA 1;
  10438     VARIABLE DWMDM 1;
  10439     L1:=L2/100;
  10440     B0:=ABS(B1)/10;
  10441     B3:=ABS(B2)*1E5;
  10442     R2:=CONS(CHIM)/B0;
  10443     R1:=CONS(CHIE)/B3;
  10444     TILT0 := TILT;
  10445     WF R1 R2 L1 0.05; %WF: 8526
  10446     IF TILT0#0;
  10447       BX := B0*TAN(TILT0);
  10448       EY := CONS(CHIE)/CONS(CHIM)*BX;
  10449       BETA := CONS(V0)/CLIGHT;
  10450       DWMDM := Z0/M0*EZERO/AMU*(G0*BX - (G0 - 1/BETA/BETA + 1)*BETA*EY
                  /CLIGHT);
  10451       TOF := L1/CONS(V0);
  10452       ENDIF;
  10453     ENDPROCEDURE;
 --- BIN FILE WRITTEN: elements
  10454   SAVE 'elements';
